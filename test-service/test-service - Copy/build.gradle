buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.4.0")
        classpath(group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version:'1.4.1.RELEASE')

    }
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'esp-test-task'
apply plugin: 'esp-sonar-task'
apply plugin: 'spring-boot'


sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
jar {
    baseName = 'test-service'
    version = version
}

dependencies {
    compile("com.comcast.xsp:xsp-boot:2.0.+") {
        exclude group: "com.sun", module: "saaj-impl"
    }
    // https://mvnrepository.com/artifact/net.sf.dozer/dozer
compile group: 'net.sf.dozer', name: 'dozer', version: '5.5.1'


// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    
    
    // https://mvnrepository.com/artifact/org.apache.ws.commons.schema/XmlSchema
compile group: 'org.apache.ws.commons.schema', name: 'XmlSchema', version: '1.3.2'
    
    // https://mvnrepository.com/artifact/org.javers/javers-core
compile group: 'org.javers', name: 'javers-core', version: '3.2.0'


// https://mvnrepository.com/artifact/org.springframework/spring-orm
compile group: 'org.springframework', name: 'spring-orm', version: '4.1.6.RELEASE'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.2.8.RELEASE'



// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
//compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.3.RELEASE'

// https://mvnrepository.com/artifact/com.oracle/ojdbc14
compile group: 'com.oracle', name: 'ojdbc14', version: '10.2.0.4.0'

// https://mvnrepository.com/artifact/com.google.code.gson/gson
compile group: 'com.google.code.gson', name: 'gson', version: '2.7'


    

//    compile("org.springframework.cloud:spring-cloud-stream:1.1.0.RELEASE")
//    compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:1.1.5.RELEASE')
//    compile('org.springframework.cloud:spring-cloud-starter-hystrix:1.1.5.RELEASE')
//    compile('org.springframework.cloud:spring-cloud-starter-eureka:1.1.5.RELEASE')
//    compile('org.springframework.cloud:spring-cloud-starter-turbine:1.1.5.RELEASE')

    testCompile("org.powermock:powermock-core:1.6.5")
    testCompile("org.powermock:powermock-api-mockito:1.6.5")
    testCompile("org.powermock:powermock-module-junit4:1.6.5")
    testCompile("org.hamcrest:java-hamcrest:2.0.0.0")

}

artifactory {
    contextUrl = "${artifactory_url}"
    resolve {
        repository {
            repoKey = 'libs-all'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

configurations {
    compile.exclude group: 'xstream', module: 'xstream'
    compile.exclude group: 'javax', module: 'javaee-api'
    deployerJars
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir 'src/integrationTest/java'
        }
        resources {
            srcDir 'src/integrationTest/resources'
        }
    }
}


task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoIntegTest.exec")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

// Eclipse has a hard time seeing/compiling the scala folder without this
eclipse {
    classpath {
        downloadSources = true
        plusConfigurations += [configurations.performanceTest]
    }
}

// Settings for local performance test
ext.localPerfTestOptions = [
        "warmUpURL" : "http://localhost:6061/api/",
        "additionalSysProperties" : ["-Dcomcast.serviceURL=http://localhost:6061",
                                     "-Dcomcast.testProfile=com.comcast.test.performance.StubProfile"],
        "suite" : perfTestSuite
]

// Settings for remote performance test
ext.remotePerfTestOptions = [
        "warmUpURL" : "http://test-service-stg.g4.app.cloud.comcast.net/api/",
        "additionalSysProperties" :  ["-Dcomcast.serviceURL=http://test-service-stg.g4.app.cloud.comcast.net",
                                      "-Dcomcast.testProfile=com.comcast.test.performance.RemoteProfile"],
        "suite" : perfTestSuite,
        "authServerUrl" : "https://websec-stg.cable.comcast.com/as/token.oauth2",
        "tokenRequestBody" : "client_id=espv4devops&client_secret=espv4devops&grant_type=client_credentials&scope=esp"
]


bootRun {
    systemProperties = System.properties
}

